name: Aqua Engine

on: [ push, pull_request ]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows",
            os: windows-latest,
            artifact: "AquaEngine_Windows.zip"
          }
        - {
            name: "Linux",
            os: ubuntu-latest,
            artifact: "AquaEngine_Linux.txz"
          }
        - {
            name: "MacOS",
            os: macos-latest,
            artifact: "AquaEngine_MacOS.txz"
          }

    # Get source
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    # Install pre-requisites
    - uses: lukka/get-cmake@latest

    - if: matrix.config.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install -y libgl1-mesa-dev xorg-dev

    - name: VCPKG
      uses: lukka/run-vcpkg@v10
      with:
        vcpkgDirectory: '${{ github.workspace }}/Vendor/Engine/vcpkg'

    # Get GitHub secret based on branch.
    # Used for CMake configuration output (e.g. Debug, Release)
    - uses: noliran/branch-based-secrets@v1
      with:
        secrets: BUILD_CONFIG # Debug, Release, MinSizeRel or ReleaseWithDeb

    # Configure CMake
    - name: Configure
      run: cmake -B ${{ github.workspace }}/build/static -DCMAKE_BUILD_TYPE=${{ secrets[env.BUILD_CONFIG_NAME] }}

    # Build engine
    - name: Build Engine
      run: cmake --build ${{ github.workspace }}/build/static -t AquaEngine --config ${{ secrets[env.BUILD_CONFIG_NAME] }}

    # Testing
    - name: Build Test
      run: cmake --build ${{ github.workspace }}/build/static -t AquaEngineTest --config ${{ secrets[env.BUILD_CONFIG_NAME] }}

    - name: Run Test [Windows]
      if: matrix.config.os == 'windows-latest'
      run: ${{ github.workspace }}/build/static/bin/${{ secrets[env.BUILD_CONFIG_NAME] }}/AquaEngineTest

    - name: Run Test
      if: matrix.config.os != 'windows-latest'
      run: ${{ github.workspace }}/build/static/bin/AquaEngineTest

    # Read engine version from text file
    - uses: juliangruber/read-file-action@v1
      id: readFile
      with:
        path: ./Version.txt

    # Upload artifact
    - uses: actions/upload-artifact@v3
      with:
        if-no-files-found: error
        name: ${{ matrix.config.artifact }}-${{ steps.readFile.outputs.content }}
        path: ${{ github.workspace }}/build/lib/*
